{"ast":null,"code":"// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { SEND_USER_DATA } from '../actions';\nconst INITIAL_STATE = {\n  email: '',\n  senha: ''\n};\n\nconst user = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SEND_USER_DATA:\n      return { ...state,\n        email: action.payload.email,\n        senha: action.payload.senha\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default user;","map":{"version":3,"names":["SEND_USER_DATA","INITIAL_STATE","email","senha","user","state","action","type","payload"],"sources":["/home/lucas/Documentos/projetos/sd-021-b-project-trybewallet/src/reducers/user.js"],"sourcesContent":["// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { SEND_USER_DATA } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n  senha: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SEND_USER_DATA:\n    return {\n      ...state,\n      email: action.payload.email,\n      senha: action.payload.senha,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n"],"mappings":"AAAA;AACA,SAASA,cAAT,QAA+B,YAA/B;AAEA,MAAMC,aAAa,GAAG;EACpBC,KAAK,EAAE,EADa;EAEpBC,KAAK,EAAE;AAFa,CAAtB;;AAKA,MAAMC,IAAI,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BJ,aAA0B;EAAA,IAAXK,MAAW;;EAC9C,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKP,cAAL;MACE,OAAO,EACL,GAAGK,KADE;QAELH,KAAK,EAAEI,MAAM,CAACE,OAAP,CAAeN,KAFjB;QAGLC,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeL;MAHjB,CAAP;;IAKF;MACE,OAAOE,KAAP;EARF;AAUD,CAXD;;AAaA,eAAeD,IAAf"},"metadata":{},"sourceType":"module"}