{"version":3,"sources":["actions/index.js","reducers/user.js","reducers/wallet.js","reducers/index.js","stores/index.js","pages/Login.js","components/Header.js","components/Table.js","pages/Wallet.js","App.js","serviceWorker.js","index.js"],"names":["SEND_USER_DATA","FETCH_CURRENCIES_SUCCESS","FETCH_CURRENCIES_FAIL","ADDSPENT","DELETEELDESPESA","LIBERAEDITDESPESA","ENVIAEDITDESPESA","sucessFetch","currencies","cotacao","valor","type","payload","failFetch","error","addSpent","spent","INITIAL_STATE","email","senha","user","state","action","eror","ask","expenses","wallet","console","log","length","id","parseFloat","data","value","despesa","exchangeRates","currency","a","sort","b","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Login","handleChange","target","name","setState","validButton","aux","test","handleSumit","e","props","login","history","preventDefault","push","this","onSubmit","htmlFor","onChange","disabled","React","Component","connect","dispatch","userdata","Header","gastos","valortotal","reduce","ant","at","toFixed","Table","despesas","deleteDespesa","editSpent","map","el","index","key","description","tag","method","onClick","todasDespesas","filter","desp","deleteElDespesa","editDespesa","liberaEditElDespesa","isEdit","idAtualizar","Wallet","fetchAPI","getcurrencies","currencie","handleSubmit","fetchGasto","handleEditButton","editaDespesa","required","role","hidden","moeda","va","fetch","json","re","USDT","response","Object","values","code","cotacao1","fetchCurrencies","arrobj","fetchSpent","enviaEditElDespesa","App","renderRoutes","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ce022f2a.chunk.js","sourcesContent":["// Coloque aqui suas actionss\nexport const SEND_USER_DATA = 'sendUserData';\nexport const FETCH_CURRENCIES_SUCCESS = 'FETCH_CURRENCIES_SUCCESS';\nexport const FETCH_CURRENCIES_FAIL = 'FETCH_CURRENCIES_FAIL';\nexport const ADDSPENT = 'add_spent';\nexport const DELETEELDESPESA = 'deleteElDespesa';\nexport const LIBERAEDITDESPESA = 'LIBERAEDITDESPESA';\nexport const ENVIAEDITDESPESA = 'ENVIAEDITDESPESA';\n\nconst sucessFetch = (currencies, cotacao = 0, valor = 0) => ({\n  type: FETCH_CURRENCIES_SUCCESS,\n  payload: { currencies, cotacao, valor },\n});\n\nconst failFetch = (error) => ({\n  type: FETCH_CURRENCIES_SUCCESS,\n  payload: error,\n});\n\nexport const addSpent = (spent) => ({\n  type: ADDSPENT,\n  payload: spent,\n});\n\nexport const fetchCurrencies = (cotacao = '', va = 0) => async (dispatch) => {\n  try {\n    console.log(cotacao);\n    const currencies = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const re = await currencies?.json();\n    if (re) {\n      delete re.USDT;\n      const response = Object.values(re).map((moeda) => moeda.code);\n      //   console.log(re);\n      const cotacao1 = cotacao ? re[cotacao] || 0 : 0;\n      const valor = va || 0;\n\n      dispatch(sucessFetch(response, cotacao1?.ask, valor));\n    // console.log(response);\n    }\n  } catch (error) {\n    dispatch(failFetch(error));\n    console.log(error);\n  }\n};\n\nexport const fetchSpent = (spent) => async (dispatch) => {\n  try {\n    const currencies = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const re = await currencies?.json();\n    if (re) {\n      delete re.USDT;\n      //   console.log(re);\n      const cotacao = re[spent.currency].ask || 0;\n      //   console.log(re);\n      //   console.log(spent.currency);\n      //   console.log(cotacao);\n\n      const arrobj = {\n        cotacao,\n        data: { ...spent,\n          exchangeRates: re },\n      };\n\n      dispatch(addSpent(arrobj));\n    // console.log(response);\n    }\n  } catch (error) {\n    dispatch(failFetch(error));\n    console.log(error);\n  }\n};\n\nexport const deleteElDespesa = (despesa, todasDespesas) => {\n  const a = todasDespesas.filter((desp) => desp.id !== despesa.id);\n  console.log(a);\n  return {\n    type: DELETEELDESPESA,\n    payload: { despesa, a },\n  };\n};\n\nexport const liberaEditElDespesa = (despesa, todasDespesas) => {\n//   const a = todasDespesas.filter((desp) => desp.id !== despesa.id);\n  const a = todasDespesas;\n  return {\n    type: LIBERAEDITDESPESA,\n    payload: { despesa, a },\n  };\n};\n\nexport const enviaEditElDespesa = (despesa, todasDespesas) => {\n  const a = todasDespesas?.filter((desp) => desp.id !== despesa.id);\n  return {\n    type: ENVIAEDITDESPESA,\n    payload: { despesa, a },\n  };\n};\n\nexport const sendLogin = (user) => ({\n  type: SEND_USER_DATA,\n  payload: user,\n});\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { SEND_USER_DATA } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n  senha: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SEND_USER_DATA:\n    return {\n      ...state,\n      email: action.payload.email,\n      senha: action.payload.senha,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { FETCH_CURRENCIES_SUCCESS, FETCH_CURRENCIES_FAIL, ADDSPENT,\n  DELETEELDESPESA, LIBERAEDITDESPESA, ENVIAEDITDESPESA } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: '',\n  eror: '',\n  ask: 0,\n  valor: 0,\n  expenses: [],\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case FETCH_CURRENCIES_SUCCESS:\n    return {\n      ...state,\n      currencies: action.payload.currencies,\n    };\n  case FETCH_CURRENCIES_FAIL:\n    return {\n      ...state,\n      eror: action.payload,\n    };\n  case ADDSPENT:\n    console.log(state.expenses[state.expenses.length - 1]?.id + 1);\n    return {\n      ...state,\n      ask: parseFloat(action.payload.cotacao) * parseFloat(action.payload.data.value)\n+ parseFloat(state.ask),\n      expenses: [...state.expenses, { ...action.payload.data,\n        id: state.expenses[state.expenses.length - 1]?.id + 1 || 0 }],\n    };\n  case DELETEELDESPESA:\n    console.log((action.payload.despesa\n      .exchangeRates[action.payload.despesa.currency].ask));\n    return {\n      ...state,\n      ask: parseFloat(state.ask) - parseFloat(action.payload.despesa.value)\n* (action.payload.despesa\n  .exchangeRates[action.payload.despesa.currency].ask),\n      expenses: [...action.payload?.a],\n    };\n  case LIBERAEDITDESPESA:\n    return {\n      ...state,\n      expenses: [...action.payload?.a],\n    };\n  case ENVIAEDITDESPESA:\n    return {\n      ...state,\n      expenses: [...action.payload.a, action.payload.despesa]\n        .sort((a, b) => a.id - b.id),\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado\n\nconst rootReducer = combineReducers({ user, wallet });\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { sendLogin } from '../actions';\n\nconst QTD_CHARACTERES = 6;\n\nclass Login extends React.Component {\n    state = {\n      email: '',\n      senha: '',\n    }\n\n    handleChange = ({ target }) => {\n      const { name, value } = target;\n      this.setState({ [name]: value });\n    }\n\n    validButton = () => {\n      const { email, senha } = this.state;\n      const exRegEmail = /^.+@.+\\..+$/.test(email);\n      let aux = true;\n      if (exRegEmail && senha.length >= QTD_CHARACTERES) {\n        aux = false;\n      }\n      return aux;\n    }\n\n    handleSumit = (e) => {\n      const { email, senha } = this.state;\n      const { login, history } = this.props;\n      e.preventDefault();\n      login({ email, senha });\n      history.push('/trybewallet/carteira');\n    }\n\n    render() {\n      const { email, senha } = this.state;\n      const validButton = this.validButton();\n      return (\n        <div>\n          <form onSubmit={ this.handleSumit }>\n\n            <label htmlFor=\"email-home\">\n              Email\n              <input\n                name=\"email\"\n                value={ email }\n                onChange={ this.handleChange }\n                type=\"email\"\n                data-testid=\"email-input\"\n                id=\"email-home\"\n              />\n\n            </label>\n            <label htmlFor=\"senha-home\">\n              senha\n              <input\n                name=\"senha\"\n                value={ senha }\n                onChange={ this.handleChange }\n                type=\"password\"\n                data-testid=\"password-input\"\n                id=\"senha-home\"\n              />\n\n            </label>\n            <button\n              type=\"submit\"\n              disabled={ validButton }\n            >\n              Entrar\n\n            </button>\n          </form>\n        </div>\n      );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (userdata) => { dispatch(sendLogin(userdata)); },\n});\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  history: PropTypes.node.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  render() {\n    const { email, gastos } = this.props;\n    // const cot = parseFloat(gastos[0]?.exchangeRates[[gastos[0].currency]].ask);\n    // const num = parseFloat(gastos[0]?.value);\n    // console.log(total);\n\n    const valortotal = gastos?.reduce((ant, at) => (\n      ant + parseFloat(at?.exchangeRates[[at.currency]].ask)\n* parseFloat(at?.value)\n    ), 0);\n    // console.log(cot, num, valortotal);\n\n    // const valorTotal =\n    return (\n      <header>\n        <span data-testid=\"email-field\">{email}</span>\n        <span>Despesa Total </span>\n        <span data-testid=\"total-field\">{valortotal?.toFixed(2) || 0}</span>\n        <span data-testid=\"header-currency-field\">BRL</span>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  gastos: state.wallet.expenses,\n});\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  gastos: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteElDespesa, liberaEditElDespesa } from '../actions';\n\nclass Table extends React.Component {\n  render() {\n    const { despesas, deleteDespesa, editSpent } = this.props;\n    // const { exchangeRates } = despesas[0];\n    console.log(despesas);\n    return (\n      <table>\n        <tr>\n          <th>Descrição</th>\n          <th>Tag</th>\n          <th>Método de pagamento</th>\n          <th>Valor</th>\n          <th>Moeda</th>\n          <th>Câmbio utilizado</th>\n          <th>Valor convertido</th>\n          <th>Moeda de conversão</th>\n          <th>Editar/Excluir</th>\n        </tr>\n        {despesas?.map((el, index) => (\n          <tr key={ index + el.id }>\n            <td>{el.description}</td>\n            <td>{el.tag}</td>\n            <td>{el.method}</td>\n            <td>{parseFloat(el.value).toFixed(2)}</td>\n            <td>{ el.exchangeRates[el.currency].name}</td>\n            <td>{parseFloat(el.exchangeRates[el.currency].ask).toFixed(2)}</td>\n            <td>\n              {(parseFloat(el.exchangeRates[el.currency].ask)\n            * parseFloat(el.value)).toFixed(2)}\n\n            </td>\n            <td>Real</td>\n            <td>\n\n              <button\n                onClick={ () => editSpent(el) }\n                data-testid=\"edit-btn\"\n                type=\"button\"\n              >\n                Editar\n\n              </button>\n\n              <button\n                onClick={ () => deleteDespesa(el, despesas) }\n                data-testid=\"delete-btn\"\n                type=\"button\"\n              >\n                Deletar\n              </button>\n\n            </td>\n\n          </tr>\n        ))}\n      </table>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  despesas: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteDespesa: (despesa, todasDespesas) => {\n    dispatch(deleteElDespesa(despesa, todasDespesas));\n  },\n  editDespesa: (despesa, todasDespesas) => {\n    dispatch(liberaEditElDespesa(despesa, todasDespesas));\n  },\n});\n\nTable.propTypes = {\n  despesas: PropTypes.node.isRequired,\n  deleteDespesa: PropTypes.func.isRequired,\n  editSpent: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport { enviaEditElDespesa, fetchCurrencies, fetchSpent } from '../actions';\nimport Table from '../components/Table';\n\nconst INITIAL_STATE = {\n  value: '',\n  description: '',\n  currency: '',\n  method: '',\n  tag: '',\n  exchangeRates: {},\n  isEdit: false,\n  idAtualizar: 100,\n};\n\nclass Wallet extends React.Component {\n   state=INITIAL_STATE\n\n   componentDidMount() {\n     this.fetchAPI();\n   }\n\n    fetchAPI = async (currency = '') => {\n      const { getcurrencies } = this.props;\n      const { value } = this.state;\n      //   console.log(value);\n      const currencie = await getcurrencies(currency, value);\n      return currencie;\n    }\n\n    handleChange = ({ target }) => {\n      const { name, value } = target;\n      this.setState({ [name]: value });\n    }\n\n    handleSubmit = (e) => {\n      e.preventDefault();\n      const { fetchGasto, gastos } = this.props;\n      const { isEdit } = this.state;\n      console.log(gastos);\n      if (!isEdit) {\n        const b = this.state;\n        delete b.idAtualizar;\n        delete b.isEdit;\n        fetchGasto(b);\n        this.setState({ ...INITIAL_STATE, isEdit: false });\n      }\n      //   const { currency } = this.state;\n\n      //   console.log(dispatch);\n      //   this.fetchAPI(currency, value);\n    }\n\n    handleEditButton = (e) => {\n      e.preventDefault();\n      const { gastos, editaDespesa } = this.props;\n      const { isEdit } = this.state;\n      if (isEdit) {\n        const a = this.state;\n        delete a.idAtualizar;\n        delete a.isEdit;\n        this.setState({ ...INITIAL_STATE, isEdit: false });\n        this.setState({ ...INITIAL_STATE, isEdit: false });\n        return editaDespesa(a, gastos);\n      }\n    }\n\n    editSpent = (despesa) => {\n      this.setState({ ...despesa, isEdit: true, idAtualizar: despesa.id });\n    }\n\n    render() {\n      const { currencies } = this.props;\n      //   console.log(currencies);\n      const { value, description,\n        currency, method, tag } = this.state;\n      return (\n        <div>\n\n          <Header />\n          <div>\n            <form onSubmit={ this.handleSubmit }>\n              <label htmlFor=\"value\">\n                Valor\n                <input\n                  required\n                  data-testid=\"value-input\"\n                  name=\"value\"\n                  value={ value }\n                  onChange={ this.handleChange }\n                  id=\"value\"\n                />\n              </label>\n              <label htmlFor=\"currency\">\n                Moeda\n                <select\n                  required\n                  role=\"combobox\"\n                  id=\"currency\"\n                  value={ currency }\n                  onChange={ (e) => this.setState({ currency: e.target.value }) }\n                >\n\t\t\t\t\t<option hidden>Moeda</option>\n                  {currencies && currencies.map((el, index) => (\n                    <option key={ el + index }>{el}</option>\n                  ))}\n                </select>\n              </label>\n\n              <select\n                value={ method }\n                onChange={ (e) => this.setState({ method: e.target.value }) }\n                data-testid=\"method-input\"\n              >\n\t\t\t\t<option hidden>Forma de Pagamento</option>\n                <option>Dinheiro</option>\n                <option>Cartão de crédito</option>\n                <option>Cartão de débito</option>\n\n              </select>\n\n              <select\n                value={ tag }\n                onChange={ (e) => this.setState({ tag: e.target.value }) }\n                data-testid=\"tag-input\"\n              >\n\t\t\t\t<option hidden>Tag</option>\n                <option>Alimentação</option>\n                <option>Lazer</option>\n                <option>Trabalho</option>\n                <option>Transporte</option>\n                <option>Saúde</option>\n\n              </select>\n\n              <label htmlFor=\"description\">\n\t\t\t\t\tDescrição\n                <input\n                  data-testid=\"description-input\"\n                  name=\"description\"\n                  value={ description }\n                  onChange={ this.handleChange }\n                  id=\"description\"\n                />\n              </label>\n\n              <button\n                type=\"submit\"\n              >\n                Adicionar despesa\n\n              </button>\n              <button\n                type=\"button\"\n                onClick={ this.handleEditButton }\n              >\n                Editar despesa\n\n              </button>\n            </form>\n          </div>\n          <Table editSpent={ this.editSpent } />\n        </div>\n      );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  currencies: state.wallet.currencies,\n  gastos: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getcurrencies: (moeda, value) => { dispatch(fetchCurrencies(moeda, value)); },\n  fetchGasto: (spent) => { dispatch(fetchSpent(spent)); },\n  editaDespesa: (despesa, todasDespesas) => {\n    dispatch(enviaEditElDespesa(despesa, todasDespesas));\n  },\n});\n\nWallet.propTypes = {\n  getcurrencies: PropTypes.func.isRequired,\n  fetchGasto: PropTypes.func.isRequired,\n  currencies: PropTypes.node.isRequired,\n  gastos: PropTypes.node.isRequired,\n  editaDespesa: PropTypes.node.isRequired,\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nclass App extends React.Component {\n   renderRoutes = () => (\n     <Switch>\n\n       <Route exact path=\"/trybewallet/\" component={ Login } />\n       <Route exact path=\"/trybewallet/carteira\" component={ Wallet } />\n       ;\n     </Switch>\n   );\n\n   render() {\n     return (\n       <div>\n         {this.renderRoutes()}\n       </div>\n     );\n   }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './stores';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}